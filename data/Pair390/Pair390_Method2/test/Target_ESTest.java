/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 26 15:20:27 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Target_ESTest extends Target_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__('z');
      assertEquals('z', char0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__('`');
      assertEquals('`', char0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__('9');
      assertEquals('9', char0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__('T');
      assertEquals('A', char0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__('G');
      assertEquals('C', char0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__('A');
      assertEquals('T', char0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__('t');
      assertEquals('a', char0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__('g');
      assertEquals('c', char0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__('c');
      assertEquals('g', char0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__('a');
      assertEquals('t', char0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__('C');
      assertEquals('G', char0);
  }
}
