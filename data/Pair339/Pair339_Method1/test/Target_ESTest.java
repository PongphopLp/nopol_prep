/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 26 11:55:10 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Target_ESTest extends Target_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Target target0 = new Target();
      float float0 = target0.__target__(508.42224F, 1.0F, 0.6666667F);
      assertEquals(508.42224F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Target target0 = new Target();
      float float0 = target0.__target__(952.9222F, (-1437.807F), 1.0F);
      assertEquals(952.9222F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Target target0 = new Target();
      float float0 = target0.__target__(952.9222F, (-1.0F), 0.0F);
      assertEquals(952.9222F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Target target0 = new Target();
      float float0 = target0.__target__((-0.8F), (-0.8F), (-0.8F));
      assertEquals((-0.8F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Target target0 = new Target();
      float float0 = target0.__target__((-1608.46F), (-922.92755F), (-1608.46F));
      assertEquals((-6613403.5F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Target target0 = new Target();
      float float0 = target0.__target__(0.0F, (-1678.9132F), 7602721.0F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Target target0 = new Target();
      float float0 = target0.__target__((-0.5F), (-0.5F), (-0.5F));
      assertEquals((-0.5F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Target target0 = new Target();
      float float0 = target0.__target__((-1608.46F), 6133.56F, 0.61202013F);
      assertEquals(929.9883F, float0, 0.01F);
  }
}
