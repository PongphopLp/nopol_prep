/*
 * This file was automatically generated by EvoSuite
 * Mon May 02 07:42:10 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Target_ESTest extends Target_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Target target0 = new Target();
      Class class0 = target0.__target__('/');
      assertNull(class0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Target target0 = new Target();
      Class class0 = target0.__target__('Z');
      assertTrue(class0.isPrimitive());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Target target0 = new Target();
      Class class0 = target0.__target__('Y');
      assertNull(class0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Target target0 = new Target();
      Class class0 = target0.__target__('X');
      assertNull(class0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Target target0 = new Target();
      Class class0 = target0.__target__('W');
      assertNull(class0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Target target0 = new Target();
      Class class0 = target0.__target__('V');
      assertNull(class0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Target target0 = new Target();
      Class class0 = target0.__target__('U');
      assertNull(class0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Target target0 = new Target();
      Class class0 = target0.__target__('T');
      assertNull(class0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Target target0 = new Target();
      Class class0 = target0.__target__('S');
      assertFalse(class0.isSynthetic());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Target target0 = new Target();
      Class class0 = target0.__target__('R');
      assertNull(class0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Target target0 = new Target();
      Class class0 = target0.__target__('Q');
      assertNull(class0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Target target0 = new Target();
      Class class0 = target0.__target__('P');
      assertNull(class0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Target target0 = new Target();
      Class class0 = target0.__target__('O');
      assertNull(class0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Target target0 = new Target();
      Class class0 = target0.__target__('N');
      assertNull(class0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Target target0 = new Target();
      Class class0 = target0.__target__('M');
      assertNull(class0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Target target0 = new Target();
      Class class0 = target0.__target__('L');
      assertNull(class0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Target target0 = new Target();
      Class class0 = target0.__target__('K');
      assertNull(class0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Target target0 = new Target();
      Class class0 = target0.__target__('J');
      assertEquals("long", class0.toString());
      assertNotNull(class0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Target target0 = new Target();
      Class class0 = target0.__target__('I');
      assertEquals("int", class0.toString());
      assertNotNull(class0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Target target0 = new Target();
      Class class0 = target0.__target__('H');
      assertNull(class0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Target target0 = new Target();
      Class class0 = target0.__target__('G');
      assertNull(class0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Target target0 = new Target();
      Class class0 = target0.__target__('F');
      assertFalse(class0.isInterface());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Target target0 = new Target();
      Class class0 = target0.__target__('E');
      assertNull(class0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Target target0 = new Target();
      Class class0 = target0.__target__('D');
      assertNotNull(class0);
      assertEquals("double", class0.toString());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Target target0 = new Target();
      Class class0 = target0.__target__('C');
      assertEquals("char", class0.toString());
      assertNotNull(class0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Target target0 = new Target();
      Class class0 = target0.__target__('B');
      assertEquals("byte", class0.toString());
      assertNotNull(class0);
  }
}
