/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 27 17:28:02 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.Clock;
import java.time.Duration;
import java.time.Instant;
import java.time.ZoneOffset;
import java.time.temporal.ChronoUnit;
import java.time.temporal.TemporalUnit;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Target_ESTest extends Target_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Target target0 = new Target();
      Instant instant0 = MockInstant.now();
      ChronoUnit chronoUnit0 = ChronoUnit.HALF_DAYS;
      Instant instant1 = MockInstant.minus(instant0, (-1L), (TemporalUnit) chronoUnit0);
      Date date0 = Date.from(instant1);
      boolean boolean0 = target0.__target__(date0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Target target0 = new Target();
      Instant instant0 = MockInstant.now();
      ChronoUnit chronoUnit0 = ChronoUnit.HALF_DAYS;
      Instant instant1 = MockInstant.minus(instant0, 43L, (TemporalUnit) chronoUnit0);
      Date date0 = Date.from(instant1);
      boolean boolean0 = target0.__target__(date0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Target target0 = new Target();
      MockDate mockDate0 = new MockDate((-3618), (-3618), (-3618), (-3618), 0);
      boolean boolean0 = target0.__target__(mockDate0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Target target0 = new Target();
      // Undeclared exception!
      try { 
        target0.__target__((Date) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Target", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Target target0 = new Target();
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      Clock clock0 = MockClock.system(zoneOffset0);
      Duration duration0 = Duration.ofMinutes((-6638L));
      Clock clock1 = MockClock.offset(clock0, duration0);
      Instant instant0 = MockInstant.now(clock1);
      Date date0 = Date.from(instant0);
      boolean boolean0 = target0.__target__(date0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Target target0 = new Target();
      MockDate mockDate0 = new MockDate(1, 1359, 1, 1, 1, 1);
      boolean boolean0 = target0.__target__(mockDate0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Target target0 = new Target();
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      Clock clock0 = MockClock.system(zoneOffset0);
      Instant instant0 = MockInstant.now(clock0);
      Date date0 = Date.from(instant0);
      boolean boolean0 = target0.__target__(date0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Target target0 = new Target();
      MockDate mockDate0 = new MockDate((-55), (-55), (-55), (-793), (-849), 1543);
      boolean boolean0 = target0.__target__(mockDate0);
      assertFalse(boolean0);
  }
}
