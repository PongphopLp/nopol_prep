/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 26 05:44:00 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Target_ESTest extends Target_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Target target0 = new Target();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)1;
      int[] intArray0 = new int[1];
      boolean boolean0 = target0.__target__(byteArray0, intArray0, intArray0, 2, (byte)0);
      assertArrayEquals(new int[] {1}, intArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Target target0 = new Target();
      byte[] byteArray0 = new byte[1];
      int[] intArray0 = new int[1];
      intArray0[0] = (int) (byte)1;
      boolean boolean0 = target0.__target__(byteArray0, intArray0, intArray0, 1, (byte)0);
      assertArrayEquals(new int[] {1}, intArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Target target0 = new Target();
      byte[] byteArray0 = new byte[1];
      int[] intArray0 = new int[1];
      // Undeclared exception!
      try { 
        target0.__target__(byteArray0, intArray0, intArray0, 1, (-3004));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 3004 out of bounds for length 1
         //
         verifyException("Target", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      Target target0 = new Target();
      int[] intArray0 = new int[8];
      boolean boolean0 = target0.__target__(byteArray0, intArray0, (int[]) null, 3, 3);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      Target target0 = new Target();
      int[] intArray0 = new int[8];
      boolean boolean0 = target0.__target__(byteArray0, intArray0, intArray0, 3, 4);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Target target0 = new Target();
      // Undeclared exception!
      try { 
        target0.__target__((byte[]) null, (int[]) null, (int[]) null, 255, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Target", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      Target target0 = new Target();
      int[] intArray0 = new int[8];
      boolean boolean0 = target0.__target__(byteArray0, intArray0, (int[]) null, 4, 4);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      int[] intArray0 = new int[4];
      Target target0 = new Target();
      int[] intArray1 = new int[6];
      intArray1[1] = 4;
      intArray1[2] = 2;
      // Undeclared exception!
      try { 
        target0.__target__(byteArray0, intArray0, intArray1, 4, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 4 out of bounds for length 4
         //
         verifyException("Target", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Target target0 = new Target();
      byte[] byteArray0 = new byte[0];
      int[] intArray0 = new int[2];
      intArray0[0] = 4;
      int[] intArray1 = new int[3];
      // Undeclared exception!
      try { 
        target0.__target__(byteArray0, intArray0, intArray1, 4, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("Target", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      Target target0 = new Target();
      int[] intArray0 = new int[8];
      intArray0[6] = 4;
      boolean boolean0 = target0.__target__(byteArray0, intArray0, intArray0, 4, 3);
      assertTrue(boolean0);
      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0, 4, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      Target target0 = new Target();
      int[] intArray0 = new int[12];
      boolean boolean0 = target0.__target__(byteArray0, intArray0, (int[]) null, 2, 2);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Target target0 = new Target();
      byte[] byteArray0 = new byte[1];
      int[] intArray0 = new int[1];
      boolean boolean0 = target0.__target__(byteArray0, intArray0, (int[]) null, 255, (byte)1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Target target0 = new Target();
      byte[] byteArray0 = new byte[1];
      int[] intArray0 = new int[1];
      boolean boolean0 = target0.__target__(byteArray0, intArray0, intArray0, (byte)1, (byte)1);
      assertTrue(boolean0);
      assertArrayEquals(new int[] {0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Target target0 = new Target();
      byte[] byteArray0 = new byte[1];
      int[] intArray0 = new int[1];
      boolean boolean0 = target0.__target__(byteArray0, intArray0, intArray0, 0, 255);
      assertArrayEquals(new int[] {0}, intArray0);
      assertTrue(boolean0);
  }
}
