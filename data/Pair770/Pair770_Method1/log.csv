01, NegateConditionals, 6, "arrayToConvert.length % 4 == 0", "arrayToConvert.length % 4 != 0"
02, NegateConditionals, 11, "i < intArray.length", "i >= intArray.length"
03, NegateConditionals, 12, "j < currentIntByteArray.length", "j >= currentIntByteArray.length"
04, NegateConditionals, 13, "((i * 4) + j) < arrayToConvert.length", "((i * 4) + j) >= arrayToConvert.length"
05, NegateConditionals, 17, "j < currentIntByteArray.length", "j >= currentIntByteArray.length"
06, Increments, 11, "i++", "i--"
07, Increments, 12, "j++", "j--"
08, Increments, 17, "j++", "j--"
09, Math, 6, "arrayToConvert.length % 4", "arrayToConvert.length * 4"
10, Math, 6, "arrayToConvert.length / 4", "arrayToConvert.length * 4"
11, Math, 7, "(arrayToConvert.length / 4) + 1", "(arrayToConvert.length / 4) - 1"
12, Math, 7, "arrayToConvert.length / 4", "arrayToConvert.length * 4"
13, Math, 13, "(i * 4) + j", "(i * 4) - j"
14, Math, 13, "i * 4", "i / 4"
15, Math, 13, "(i * 4) + j", "(i * 4) - j"
16, Math, 13, "i * 4", "i / 4"
17, Math, 18, "(4 - 1 - j) * 8", "(4 - 1 - j) / 8"
18, Math, 18, "4 - 1 - j", "4 + 1 + j"
19, Math, 19, "(currentIntByteArray[j] & 0x000000FF) << shiftDistance", "(currentIntByteArray[j] & 0x000000FF) >> shiftDistance"
20, Math, 19, "currentIntByteArray[j] & 0x000000FF", "currentIntByteArray[j] | 0x000000FF"
21, ConditionalsBoundary, 11, "i < intArray.length", "i <= intArray.length"
22, ConditionalsBoundary, 12, "j < currentIntByteArray.length", "j <= currentIntByteArray.length"
23, ConditionalsBoundary, 13, "((i * 4) + j) < arrayToConvert.length", "((i * 4) + j) <= arrayToConvert.length"
24, ConditionalsBoundary, 17, "j < currentIntByteArray.length", "j <= currentIntByteArray.length"
