001, InvertNegatives, 88, "-y[index]", "y[index]"
002, Math, 7, "probe_count + 1", "probe_count - 1"
003, Math, 17, "probeOrder[probeIndex] - 1", "probeOrder[probeIndex] + 1"
004, Math, 17, "probeOrder[probeIndex - 1] - 1", "probeOrder[probeIndex - 1] + 1"
005, Math, 17, "probeIndex - 1", "probeIndex + 1"
006, Math, 34, "(double)gap - ((probe_count + 1 - w) * (clone_length - eps1))", "(double)gap + ((probe_count + 1 - w) * (clone_length - eps1))"
007, Math, 34, "(probe_count + 1 - w) * (clone_length - eps1)", "(probe_count + 1 - w) / (clone_length - eps1)"
008, Math, 34, "probe_count + 1 - w", "probe_count + 1 + w"
009, Math, 34, "probe_count + 1", "probe_count - 1"
010, Math, 34, "clone_length - eps1", "clone_length + eps1"
011, Math, 36, "gap / (double)(probe_count + 1 - w)", "gap * (double)(probe_count + 1 - w)"
012, Math, 36, "probe_count + 1 - w", "probe_count + 1 + w"
013, Math, 36, "probe_count + 1", "probe_count - 1"
014, Math, 45, "A / (2 * w)", "A * (2 * w)"
015, Math, 45, "2 * w", "2 / w"
016, Math, 46, "(gap - A) / (probe_count + 1 - w)", "(gap - A) * (probe_count + 1 - w)"
017, Math, 46, "gap - A", "gap + A"
018, Math, 46, "probe_count + 1 - w", "probe_count + 1 + w"
019, Math, 46, "probe_count + 1", "probe_count - 1"
020, Math, 50, "(clone_length - eps) * w", "(clone_length - eps) / w"
021, Math, 50, "clone_length - eps", "clone_length + eps"
022, Math, 52, "clone_length - eps", "clone_length + eps"
023, Math, 56, "(mmax * w) - msum", "(mmax * w) + msum"
024, Math, 56, "mmax * w", "mmax / w"
025, Math, 57, "msum - (mmin * w)", "msum + (mmin * w)"
026, Math, 57, "mmin * w", "mmin / w"
027, Math, 60, "A / w", "A * w"
028, Math, 64, "(A - (eps * w)) / t1", "(A - (eps * w)) * t1"
029, Math, 64, "eps * w", "eps / w"
030, Math, 65, "((w * (clone_length - eps)) - A) / t2", "((w * (clone_length - eps)) - A) * t2"
031, Math, 65, "(w * (clone_length - eps)) - A", "(w * (clone_length - eps)) + A"
032, Math, 65, "w * (clone_length - eps)", "w / (clone_length - eps)"
033, Math, 65, "clone_length - eps", "clone_length + eps"
034, Math, 68, "probeOrder[link[probeIndex]] - 1", "probeOrder[link[probeIndex]] + 1"
035, Math, 68, "probeOrder[link[probeIndex] - 1] - 1", "probeOrder[link[probeIndex] - 1] + 1"
036, Math, 68, "link[probeIndex] - 1", "link[probeIndex] + 1"
037, Math, 69, "((A * (mmax - un)) + (eps * ((w * un) - msum))) / t1", "((A * (mmax - un)) + (eps * ((w * un) - msum))) * t1"
038, Math, 69, "(A * (mmax - un)) + (eps * ((w * un) - msum))", "(A * (mmax - un)) - (eps * ((w * un) - msum))"
039, Math, 69, "mmax - un", "mmax + un"
040, Math, 69, "eps * ((w * un) - msum)", "eps / ((w * un) - msum)"
041, Math, 69, "(w * un) - msum", "(w * un) + msum"
042, Math, 69, "w * un", "w / un"
043, Math, 74, "link[probeIndex] - 1", "link[probeIndex] + 1"
044, Math, 74, "probeOrder[link[probeIndex] - 1] - 1", "probeOrder[link[probeIndex] - 1] + 1"
045, Math, 74, "link[probeIndex] - 1", "link[probeIndex] + 1"
046, Math, 75, "(((clone_length - eps) * (msum - (w * un))) + (A * (un - mmin))) / t2", "(((clone_length - eps) * (msum - (w * un))) + (A * (un - mmin))) * t2"
047, Math, 75, "((clone_length - eps) * (msum - (w * un))) + (A * (un - mmin))", "((clone_length - eps) * (msum - (w * un))) - (A * (un - mmin))"
048, Math, 75, "(clone_length - eps) * (msum - (w * un))", "(clone_length - eps) / (msum - (w * un))"
049, Math, 75, "clone_length - eps", "clone_length + eps"
050, Math, 75, "msum - (w * un)", "msum + (w * un)"
051, Math, 75, "w * un", "w / un"
052, Math, 75, "A * (un - mmin)", "A / (un - mmin)"
053, Math, 75, "un - mmin", "un + mmin"
054, Math, 85, "gap - sum", "gap + sum"
055, NegateConditionals, 16, "probeIndex < probe_count", "probeIndex >= probe_count"
056, NegateConditionals, 18, "t1 > 0", "t1 <= 0"
057, NegateConditionals, 20, "mmax < t1", "mmax >= t1"
058, NegateConditionals, 23, "mmin > t1", "mmin <= t1"
059, NegateConditionals, 35, "A <= 0.0", "A > 0.0"
060, NegateConditionals, 37, "probeIndex < un", "probeIndex >= un"
061, NegateConditionals, 40, "probeIndex < w", "probeIndex >= w"
062, NegateConditionals, 47, "probeIndex < un", "probeIndex >= un"
063, NegateConditionals, 50, "((clone_length - eps) * w) <= A", "((clone_length - eps) * w) > A"
064, NegateConditionals, 51, "probeIndex < w", "probeIndex >= w"
065, NegateConditionals, 58, "t1 == 0", "t1 != 0"
066, NegateConditionals, 59, "probeIndex < w", "probeIndex >= w"
067, NegateConditionals, 66, "t3 < t4", "t3 >= t4"
068, NegateConditionals, 67, "probeIndex < w", "probeIndex >= w"
069, NegateConditionals, 73, "probeIndex < w", "probeIndex >= w"
070, NegateConditionals, 82, "probeIndex < probe_count", "probeIndex >= probe_count"
071, NegateConditionals, 86, "index < y.length", "index >= y.length"
072, NegateConditionals, 87, "y[index] < 0.0", "y[index] >= 0.0"
073, ConditionalsBoundary, 16, "probeIndex < probe_count", "probeIndex <= probe_count"
074, ConditionalsBoundary, 18, "t1 > 0", "t1 >= 0"
075, ConditionalsBoundary, 20, "mmax < t1", "mmax <= t1"
076, ConditionalsBoundary, 23, "mmin > t1", "mmin >= t1"
077, ConditionalsBoundary, 35, "A <= 0.0", "A < 0.0"
078, ConditionalsBoundary, 37, "probeIndex < un", "probeIndex <= un"
079, ConditionalsBoundary, 40, "probeIndex < w", "probeIndex <= w"
080, ConditionalsBoundary, 47, "probeIndex < un", "probeIndex <= un"
081, ConditionalsBoundary, 50, "((clone_length - eps) * w) <= A", "((clone_length - eps) * w) < A"
082, ConditionalsBoundary, 51, "probeIndex < w", "probeIndex <= w"
083, ConditionalsBoundary, 59, "probeIndex < w", "probeIndex <= w"
084, ConditionalsBoundary, 66, "t3 < t4", "t3 <= t4"
085, ConditionalsBoundary, 67, "probeIndex < w", "probeIndex <= w"
086, ConditionalsBoundary, 73, "probeIndex < w", "probeIndex <= w"
087, ConditionalsBoundary, 82, "probeIndex < probe_count", "probeIndex <= probe_count"
088, ConditionalsBoundary, 86, "index < y.length", "index <= y.length"
089, ConditionalsBoundary, 87, "y[index] < 0.0", "y[index] <= 0.0"
090, Increments, 16, "probeIndex++", "probeIndex--"
091, Increments, 27, "w++", "w--"
092, Increments, 31, "un++", "un--"
093, Increments, 37, "probeIndex++", "probeIndex--"
094, Increments, 47, "probeIndex++", "probeIndex--"
095, Increments, 51, "probeIndex++", "probeIndex--"
096, Increments, 59, "probeIndex++", "probeIndex--"
097, Increments, 67, "probeIndex++", "probeIndex--"
098, Increments, 73, "probeIndex++", "probeIndex--"
099, Increments, 82, "probeIndex++", "probeIndex--"
100, Increments, 86, "index++", "index--"
