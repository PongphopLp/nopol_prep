/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 30 09:22:12 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Target_ESTest extends Target_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Target target0 = new Target();
      Integer integer0 = Integer.valueOf((-962));
      Number number0 = target0.__target__(integer0, integer0);
      assertEquals(0, number0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Target target0 = new Target();
      Byte byte0 = Byte.valueOf((byte)0);
      Long long0 = Long.getLong("Target", (-1L));
      Number number0 = target0.__target__(byte0, long0);
      assertEquals(1L, number0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Target target0 = new Target();
      Long long0 = Long.getLong("Target", (-1L));
      Number number0 = target0.__target__(long0, long0);
      assertEquals(0L, number0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Target target0 = new Target();
      Float float0 = Float.valueOf(0.0F);
      // Undeclared exception!
      try { 
        target0.__target__((Number) null, float0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Target", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Target target0 = new Target();
      Byte byte0 = Byte.valueOf((byte) (-54));
      Float float0 = Float.valueOf((float) (byte) (-54));
      Number number0 = target0.__target__(float0, byte0);
      assertEquals(0.0F, number0);
      
      Number number1 = target0.__target__(byte0, number0);
      assertEquals((-54.0F), number1);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Target target0 = new Target();
      Long long0 = Long.getLong("Target", (-1L));
      Double double0 = Double.valueOf((double) (-1L));
      Number number0 = target0.__target__(long0, double0);
      assertEquals(0.0, number0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Target target0 = new Target();
      Byte byte0 = Byte.valueOf((byte)0);
      Number number0 = target0.__target__(byte0, byte0);
      assertEquals(0, number0);
      
      Double double0 = Double.valueOf((double) (-1L));
      Number number1 = target0.__target__(double0, number0);
      assertEquals((-1.0), number1);
  }
}
