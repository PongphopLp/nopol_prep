/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 30 02:29:23 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Target_ESTest extends Target_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Target target0 = new Target();
      String string0 = target0.__target__(50, false);
      assertEquals("l", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Target target0 = new Target();
      String string0 = target0.__target__(90, true);
      assertEquals("XC", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Target target0 = new Target();
      String string0 = target0.__target__(100, false);
      assertEquals("c", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Target target0 = new Target();
      String string0 = target0.__target__(400, false);
      assertEquals("cd", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Target target0 = new Target();
      String string0 = target0.__target__(600, true);
      assertEquals("DC", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Target target0 = new Target();
      String string0 = target0.__target__(500, false);
      assertEquals("d", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Target target0 = new Target();
      String string0 = target0.__target__(900, true);
      assertEquals("CM", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Target target0 = new Target();
      String string0 = target0.__target__(1000, false);
      assertEquals("m", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Target target0 = new Target();
      String string0 = target0.__target__(708, true);
      assertEquals("DCCVIII", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Target target0 = new Target();
      String string0 = target0.__target__(726, false);
      assertEquals("dccxxvi", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Target target0 = new Target();
      String string0 = target0.__target__(784, true);
      assertEquals("DCCLXXXIV", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Target target0 = new Target();
      String string0 = target0.__target__(2873, true);
      assertEquals("MMDCCCLXXIII", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Target target0 = new Target();
      String string0 = target0.__target__(2032, false);
      assertEquals("mmxxxii", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Target target0 = new Target();
      String string0 = target0.__target__(1, true);
      assertEquals("I", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Target target0 = new Target();
      String string0 = target0.__target__(255, false);
      assertEquals("cclv", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Target target0 = new Target();
      String string0 = target0.__target__(2497, true);
      assertEquals("MMCDXCVII", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Target target0 = new Target();
      String string0 = target0.__target__(925, false);
      assertEquals("cmxxv", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Target target0 = new Target();
      String string0 = target0.__target__(1649, true);
      assertEquals("MDCXLIX", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Target target0 = new Target();
      String string0 = target0.__target__((-1029), false);
      assertEquals("", string0);
  }
}
