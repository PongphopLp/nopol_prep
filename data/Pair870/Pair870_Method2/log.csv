01, InvertNegatives, 9, "-1", "1"
02, ConditionalsBoundary, 9, "pos > -1", "pos >= -1"
03, ConditionalsBoundary, 11, "beginIdx < 0", "beginIdx <= 0"
04, ConditionalsBoundary, 13, "endIdx > input.length() - 1", "endIdx >= input.length() - 1"
05, ConditionalsBoundary, 15, "beginIdx > 0", "beginIdx >= 0"
06, ConditionalsBoundary, 16, "endIdx < input.length()", "endIdx <= input.length()"
07, ConditionalsBoundary, 20, "input.length() >= 200", "input.length() > 200"
08, Math, 10, "pos - numChars", "pos + numChars"
09, Math, 12, "pos + numChars", "pos - numChars"
10, Math, 13, "input.length() - 1", "input.length() + 1"
11, Math, 13, "input.length() - 1", "input.length() + 1"
12, Increments, 15, "beginIdx--", "beginIdx++"
13, Increments, 16, "endIdx++", "endIdx--"
14, NegateConditionals, 5, "input == null", "input != null"
15, NegateConditionals, 5, "wordList == null", "wordList != null"
16, NegateConditionals, 5, "wordList.length == 0", "wordList.length != 0"
17, NegateConditionals, 5, "numChars == 0", "numChars != 0"
18, NegateConditionals, 9, "pos > -1", "pos <= -1"
19, NegateConditionals, 11, "beginIdx < 0", "beginIdx >= 0"
20, NegateConditionals, 13, "endIdx > input.length() - 1", "endIdx <= input.length() - 1"
21, NegateConditionals, 15, "beginIdx > 0", "beginIdx <= 0"
22, NegateConditionals, 15, "chars[beginIdx] != ' '", "chars[beginIdx] == ' '"
23, NegateConditionals, 15, "chars[beginIdx] != '\n'", "chars[beginIdx] == '\n'"
24, NegateConditionals, 15, "chars[beginIdx] != '\r'", "chars[beginIdx] == '\r'"
25, NegateConditionals, 16, "endIdx < input.length()", "endIdx >= input.length()"
26, NegateConditionals, 16, "chars[endIdx] != ' '", "chars[endIdx] == ' '"
27, NegateConditionals, 16, "chars[endIdx] != '\n'", "chars[endIdx] == '\n'"
28, NegateConditionals, 16, "chars[endIdx] != '\r'", "chars[endIdx] == '\r'"
29, NegateConditionals, 20, "input.length() >= 200", "input.length() < 200"
