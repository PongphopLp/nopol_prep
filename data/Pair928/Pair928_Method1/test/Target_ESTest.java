/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 29 06:01:55 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Target_ESTest extends Target_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer(" a,Old6,%c#DIJeaehS");
      StringBuffer stringBuffer1 = stringBuffer0.appendCodePoint(10);
      StringBuffer stringBuffer2 = stringBuffer1.appendCodePoint(30);
      Target target0 = new Target();
      String string0 = target0.__target__(stringBuffer2);
      assertEquals(20, stringBuffer2.length());
      assertEquals("a,Old6,%c#DIJeaehS \u001E", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer(" a,Old6,%c#DIJeaehx");
      Target target0 = new Target();
      stringBuffer0.setLength(3009);
      target0.__target__(stringBuffer0);
      target0.__target__(stringBuffer0);
      target0.__target__(stringBuffer0);
      // Undeclared exception!
      target0.__target__(stringBuffer0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Target target0 = new Target();
      // Undeclared exception!
      try { 
        target0.__target__((StringBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Target target0 = new Target();
      StringBuffer stringBuffer0 = new StringBuffer(" mSN ");
      stringBuffer0.append((CharSequence) " mSN ");
      String string0 = target0.__target__(stringBuffer0);
      assertEquals(7, stringBuffer0.length());
      assertEquals("mSN mSN", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Target target0 = new Target();
      StringBuffer stringBuffer0 = new StringBuffer();
      String string0 = target0.__target__(stringBuffer0);
      assertEquals("", string0);
  }
}
