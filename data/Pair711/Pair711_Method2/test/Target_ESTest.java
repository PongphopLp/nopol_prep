/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 27 23:41:05 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Target_ESTest extends Target_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Target target0 = new Target();
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      Double double0 = new Double(477.7542041777317);
      List<Double> list0 = List.of(double0, double0, double0, double0);
      linkedList0.addAll(0, (Collection<? extends Double>) list0);
      linkedList0.poll();
      double double1 = target0.__target__(linkedList0);
      assertEquals(477.7542041777317, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Target target0 = new Target();
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      Double double0 = new Double(477.7542041777317);
      List<Double> list0 = List.of(double0, double0, double0, double0);
      linkedList0.addAll(0, (Collection<? extends Double>) list0);
      double double1 = target0.__target__(linkedList0);
      assertEquals(477.7542041777317, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Target target0 = new Target();
      Double double0 = Double.valueOf(0.0);
      List<Double> list0 = List.of(double0, double0);
      // Undeclared exception!
      try { 
        target0.__target__(list0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ImmutableCollections", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Target target0 = new Target();
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      linkedList0.add((Double) null);
      // Undeclared exception!
      try { 
        target0.__target__(linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Target", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Target target0 = new Target();
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      Double double0 = new Double((-1805.0));
      linkedList0.add(double0);
      linkedList0.add(double0);
      double double1 = target0.__target__(linkedList0);
      assertEquals((-1805.0), double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Target target0 = new Target();
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      double double0 = target0.__target__(linkedList0);
      assertEquals(0.0, double0, 0.01);
  }
}
