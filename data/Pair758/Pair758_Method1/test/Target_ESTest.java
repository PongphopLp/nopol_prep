/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 28 06:16:16 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.CharBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Target_ESTest extends Target_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Target target0 = new Target();
      char[] charArray0 = new char[2];
      charArray0[1] = 'j';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer1 = CharBuffer.wrap(charArray0);
      charBuffer0.append('8');
      int int0 = target0.__target__(charBuffer1, charBuffer0, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Target target0 = new Target();
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = target0.__target__(charBuffer0, charBuffer0, (-1004));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Target target0 = new Target();
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      char[] charArray0 = new char[1];
      CharBuffer charBuffer1 = CharBuffer.wrap(charArray0);
      int int0 = target0.__target__(charBuffer1, charBuffer0, 837);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Target target0 = new Target();
      CharBuffer charBuffer0 = CharBuffer.allocate(5554);
      target0.__target__(charBuffer0, charBuffer0, 5554);
      // Undeclared exception!
      target0.__target__(charBuffer0, charBuffer0, 5554);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Target target0 = new Target();
      // Undeclared exception!
      try { 
        target0.__target__((CharSequence) null, (CharSequence) null, (-1994));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Target target0 = new Target();
      CharBuffer charBuffer0 = CharBuffer.allocate(7);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      charBuffer0.compact();
      // Undeclared exception!
      try { 
        target0.__target__(charBuffer1, charBuffer1, 7);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Target target0 = new Target();
      CharBuffer charBuffer0 = CharBuffer.allocate(24);
      CharBuffer charBuffer1 = charBuffer0.put("'$.]v64~%aA~tt+3>$");
      int int0 = target0.__target__("'$.]v64~%aA~tt+3>$", charBuffer1, 24);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Target target0 = new Target();
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = target0.__target__(charBuffer0, charBuffer0, 0);
      assertEquals(0, int0);
  }
}
