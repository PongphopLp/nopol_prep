/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 27 01:02:03 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Target_ESTest extends Target_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Target target0 = new Target();
      long[] longArray0 = new long[1];
      long[] longArray1 = target0.__target__(longArray0, 2);
      assertEquals(2, longArray1.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Target target0 = new Target();
      long[] longArray0 = new long[0];
      long[] longArray1 = target0.__target__(longArray0, 2241);
      long[] longArray2 = target0.__target__(longArray1, 2241);
      assertEquals(2241, longArray2.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Target target0 = new Target();
      long[] longArray0 = new long[0];
      long[] longArray1 = target0.__target__(longArray0, (-1));
      assertEquals(0, longArray1.length);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Target target0 = new Target();
      // Undeclared exception!
      try { 
        target0.__target__((long[]) null, (-22));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Target", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Target target0 = new Target();
      long[] longArray0 = new long[6];
      long[] longArray1 = target0.__target__(longArray0, 1886);
      long[] longArray2 = target0.__target__(longArray1, 2297);
      assertEquals(2830, longArray2.length);
  }
}
