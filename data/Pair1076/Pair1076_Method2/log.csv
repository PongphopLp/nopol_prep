01, Math, 6, "off + len", "off - len"
02, Math, 7, "data[off++] & 0xFF", "data[off++] | 0xFF"
03, Math, 8, "ch >> 4", "ch << 4"
04, Math, 13, "((ch & 0x1F) << 6) | (data[off++] & 0x3F)", "((ch & 0x1F) << 6) & (data[off++] & 0x3F)"
05, Math, 13, "(ch & 0x1F) << 6", "(ch & 0x1F) >> 6"
06, Math, 13, "ch & 0x1F", "ch | 0x1F"
07, Math, 13, "data[off++] & 0x3F", "data[off++] | 0x3F"
08, Math, 15, "off + 2", "off - 2"
09, Math, 18, "((ch & 0x0f) << 12) | ((data[off++] & 0x3F) << 6) | (data[off++] & 0x3F)", "((ch & 0x0f) << 12) & ((data[off++] & 0x3F) << 6) & (data[off++] & 0x3F)"
10, Math, 18, "(ch & 0x0f) << 12", "(ch & 0x0f) >> 12"
11, Math, 18, "ch & 0x0f", "ch | 0x0f"
12, Math, 18, "(data[off++] & 0x3F) << 6", "(data[off++] & 0x3F) >> 6"
13, Math, 18, "data[off++] & 0x3F", "data[off++] | 0x3F"
14, Math, 18, "data[off++] & 0x3F", "data[off++] | 0x3F"
15, Math, 20, "off + 1", "off - 1"
16, Math, 23, "((ch & 0x3F) << 4) | (data[off++] & 0x0f)", "((ch & 0x3F) << 4) & (data[off++] & 0x0f)"
17, Math, 23, "(ch & 0x3F) << 4", "(ch & 0x3F) >> 4"
18, Math, 23, "ch & 0x3F", "ch | 0x3F"
19, Math, 23, "data[off++] & 0x0f", "data[off++] | 0x0f"
20, Increments, 7, "off++", "off--"
21, Increments, 13, "off++", "off--"
22, Increments, 18, "off++", "off--"
23, Increments, 18, "off++", "off--"
24, Increments, 23, "off++", "off--"
25, NegateConditionals, 6, "off < end", "off >= end"
26, NegateConditionals, 10, "off >= len", "off < len"
27, NegateConditionals, 15, "off + 2 >= len", "off + 2 < len"
28, NegateConditionals, 20, "off + 1 >= len", "off + 1 < len"
29, ConditionalsBoundary, 6, "off < end", "off <= end"
30, ConditionalsBoundary, 10, "off >= len", "off > len"
31, ConditionalsBoundary, 15, "off + 2 >= len", "off + 2 > len"
32, ConditionalsBoundary, 20, "off + 1 >= len", "off + 1 > len"
33, VoidMethodCalls, 26, "buf.append((char)ch);
", "DELETED"
