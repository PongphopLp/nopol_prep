01, InvertNegatives, 15, "-Math.round(-(num * exp))", "Math.round(-(num * exp))"
02, InvertNegatives, 15, "-(num * exp)", "(num * exp)"
03, InvertNegatives, 19, "-n", "n"
04, VoidMethodCalls, 21, "buffer.insert(0,n / iexp);
", "DELETED"
05, VoidMethodCalls, 22, "buffer.insert(0,'-');
", "DELETED"
06, VoidMethodCalls, 23, "buffer.append('.');
", "DELETED"
07, VoidMethodCalls, 26, "buffer.append(frac / iexp);
", "DELETED"
08, VoidMethodCalls, 32, "buffer.insert(0,' ');
", "DELETED"
09, NegateConditionals, 10, "num * exp <= Long.MIN_VALUE / 2", "num * exp > Long.MIN_VALUE / 2"
10, NegateConditionals, 10, "num * exp >= Long.MAX_VALUE / 2", "num * exp < Long.MAX_VALUE / 2"
11, NegateConditionals, 15, "num < 0.0", "num >= 0.0"
12, NegateConditionals, 19, "n < 0", "n >= 0"
13, NegateConditionals, 22, "n / iexp == 0", "n / iexp != 0"
14, NegateConditionals, 22, "n < 0", "n >= 0"
15, NegateConditionals, 23, "decimals > 0", "decimals <= 0"
16, NegateConditionals, 24, "iexp > 1", "iexp <= 1"
17, NegateConditionals, 31, "i < numOfSpaces", "i >= numOfSpaces"
18, Increments, 31, "i++", "i--"
19, Math, 10, "num * exp", "num / exp"
20, Math, 10, "Long.MIN_VALUE / 2", "Long.MIN_VALUE * 2"
21, Math, 10, "num * exp", "num / exp"
22, Math, 10, "Long.MAX_VALUE / 2", "Long.MAX_VALUE * 2"
23, Math, 15, "num * exp", "num / exp"
24, Math, 16, "num * exp", "num / exp"
25, Math, 19, "-n % iexp", "-n * iexp"
26, Math, 19, "n % iexp", "n * iexp"
27, Math, 21, "n / iexp", "n * iexp"
28, Math, 22, "n / iexp", "n * iexp"
29, Math, 25, "iexp / 10", "iexp * 10"
30, Math, 26, "frac / iexp", "frac * iexp"
31, Math, 27, "frac % iexp", "frac * iexp"
32, Math, 30, "width - buffer.length()", "width + buffer.length()"
33, ConditionalsBoundary, 10, "num * exp <= Long.MIN_VALUE / 2", "num * exp < Long.MIN_VALUE / 2"
34, ConditionalsBoundary, 10, "num * exp >= Long.MAX_VALUE / 2", "num * exp > Long.MAX_VALUE / 2"
35, ConditionalsBoundary, 15, "num < 0.0", "num <= 0.0"
36, ConditionalsBoundary, 19, "n < 0", "n <= 0"
37, ConditionalsBoundary, 22, "n < 0", "n <= 0"
38, ConditionalsBoundary, 23, "decimals > 0", "decimals >= 0"
39, ConditionalsBoundary, 24, "iexp > 1", "iexp >= 1"
40, ConditionalsBoundary, 31, "i < numOfSpaces", "i <= numOfSpaces"
