/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 26 01:12:13 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Target_ESTest extends Target_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Target target0 = new Target();
      // Undeclared exception!
      try { 
        target0.__target__((String) null, '&', '&', true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Target", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Target target0 = new Target();
      Vector vector0 = target0.__target__("e%\"U", 'W', 1, false);
      assertNotNull(vector0);
      assertEquals("[e%\"U]", vector0.toString());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Target target0 = new Target();
      Vector vector0 = target0.__target__("|", '|', (-1766), true);
      assertNull(vector0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Target target0 = new Target();
      Vector vector0 = target0.__target__(":*^z4o'~-JV^el", 'W', 0, false);
      assertNull(vector0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Target target0 = new Target();
      Vector vector0 = target0.__target__(" o]D_sdE ]i[0i/M:|5", '\u0000', '\u0000', false);
      assertNull(vector0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Target target0 = new Target();
      Vector vector0 = target0.__target__("m59?$U2DIBC|", '|', 1, true);
      assertNotNull(vector0);
      assertEquals("[m59?$U2DIBC, ]", vector0.toString());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Target target0 = new Target();
      Vector vector0 = target0.__target__("", 'f', 1, false);
      assertNull(vector0);
  }
}
