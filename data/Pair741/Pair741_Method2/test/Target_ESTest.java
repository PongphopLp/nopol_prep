/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 28 03:14:16 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Target_ESTest extends Target_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Target target0 = new Target();
      Vector vector0 = target0.__target__("s-h9P]n@Sj");
      assertEquals("[s-h9P]n@Sj]", vector0.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Target target0 = new Target();
      Vector vector0 = target0.__target__("`wEC8t4^'\bwmt7Q");
      assertEquals("[`wEC8t4^\bwmt7Q]", vector0.toString());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Target target0 = new Target();
      Vector vector0 = target0.__target__("");
      assertTrue(vector0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Target target0 = new Target();
      // Undeclared exception!
      try { 
        target0.__target__((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Target", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Target target0 = new Target();
      Vector vector0 = target0.__target__("+?\\t?\"fjm|b9t");
      assertEquals("[+?\t?fjm|b9t]", vector0.toString());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Target target0 = new Target();
      Vector vector0 = target0.__target__("24327 gT:DuE9>_P");
      assertEquals("[24327, gT:DuE9>_P]", vector0.toString());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Target target0 = new Target();
      Vector vector0 = target0.__target__("dRz\tNv-a4uAcD");
      assertEquals("[dRz, Nv-a4uAcD]", vector0.toString());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Target target0 = new Target();
      Vector vector0 = target0.__target__("`fjV:8sz,Y'gM\"0F0c");
      assertEquals("[`fjV:8sz,YgM0F0c]", vector0.toString());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Target target0 = new Target();
      Vector vector0 = target0.__target__("37XQ+'|8j%o6HI`K'ze");
      assertEquals("[37XQ+|8j%o6HI`K, ze]", vector0.toString());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Target target0 = new Target();
      Vector vector0 = target0.__target__("\\<sEWfw^)7I}");
      assertEquals("[<sEWfw^)7I}]", vector0.toString());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Target target0 = new Target();
      Vector vector0 = target0.__target__(" IrkL");
      assertEquals("[IrkL]", vector0.toString());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Target target0 = new Target();
      Vector vector0 = target0.__target__("Tf'R4}K<NUuJ] ");
      assertEquals("[TfR4}K<NUuJ] ]", vector0.toString());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Target target0 = new Target();
      Vector vector0 = target0.__target__("\"] if[;'@=@.");
      assertEquals("[] if[;@=@.]", vector0.toString());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Target target0 = new Target();
      Vector vector0 = target0.__target__("C w\",R\"*1>bTJc`");
      assertEquals("[C, w,R, *1>bTJc`]", vector0.toString());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Target target0 = new Target();
      Vector vector0 = target0.__target__("%p2(\r");
      assertEquals("[%p2(]", vector0.toString());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Target target0 = new Target();
      Vector vector0 = target0.__target__(")y\n3Kj65)");
      assertEquals("[)y, 3Kj65)]", vector0.toString());
  }
}
