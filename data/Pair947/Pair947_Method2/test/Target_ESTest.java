/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 29 08:23:31 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.Instant;
import java.time.temporal.ChronoUnit;
import java.time.temporal.TemporalUnit;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Target_ESTest extends Target_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Target target0 = new Target();
      MockDate mockDate0 = new MockDate();
      Instant instant0 = MockInstant.now();
      ChronoUnit chronoUnit0 = ChronoUnit.MINUTES;
      Instant instant1 = MockInstant.minus(instant0, 3348L, (TemporalUnit) chronoUnit0);
      Date date0 = Date.from(instant1);
      int int0 = target0.__target__(date0, mockDate0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Target target0 = new Target();
      MockDate mockDate0 = new MockDate(261, 261, 261, 1744, 1744);
      MockDate mockDate1 = new MockDate(261, 261, 261, 1899, 0, 1744);
      int int0 = target0.__target__(mockDate0, mockDate1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Target target0 = new Target();
      MockDate mockDate0 = new MockDate((-1829), 1899, 1899, (-1829), 2268, 606);
      MockDate mockDate1 = new MockDate(2573, 2573, 2573);
      int int0 = target0.__target__(mockDate1, mockDate0);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Target target0 = new Target();
      // Undeclared exception!
      try { 
        target0.__target__((Date) null, (Date) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Calendar", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Target target0 = new Target();
      Instant instant0 = MockInstant.ofEpochSecond((-1L), (-1L));
      Date date0 = Date.from(instant0);
      MockDate mockDate0 = new MockDate((-1L));
      int int0 = target0.__target__(date0, mockDate0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Target target0 = new Target();
      MockDate mockDate0 = new MockDate((-3467L));
      Instant instant0 = MockInstant.ofEpochSecond((-3467L), (-3467L));
      Date date0 = Date.from(instant0);
      int int0 = target0.__target__(mockDate0, date0);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Target target0 = new Target();
      MockDate mockDate0 = new MockDate(1, 1, 1);
      MockDate mockDate1 = new MockDate(1, 1, 1, 1, 1);
      int int0 = target0.__target__(mockDate0, mockDate1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Target target0 = new Target();
      MockDate mockDate0 = new MockDate();
      Instant instant0 = MockInstant.now();
      ChronoUnit chronoUnit0 = ChronoUnit.MINUTES;
      Instant instant1 = MockInstant.minus(instant0, 3348L, (TemporalUnit) chronoUnit0);
      Date date0 = Date.from(instant1);
      int int0 = target0.__target__(mockDate0, date0);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Target target0 = new Target();
      MockDate mockDate0 = new MockDate(2573, 2573, 2573, 2573, 2573);
      MockDate mockDate1 = new MockDate(2573, 2573, 2573);
      int int0 = target0.__target__(mockDate0, mockDate1);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Target target0 = new Target();
      MockDate mockDate0 = new MockDate((-1829), 1899, 1899, (-1829), 2268, 606);
      int int0 = target0.__target__(mockDate0, mockDate0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Target target0 = new Target();
      MockDate mockDate0 = new MockDate((-1829), 1899, 1899, (-1829), 2268, 606);
      MockDate mockDate1 = new MockDate(2573, 2573, 2573);
      int int0 = target0.__target__(mockDate0, mockDate1);
      assertEquals(1, int0);
  }
}
