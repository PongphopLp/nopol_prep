/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 29 08:19:59 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.Instant;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Target_ESTest extends Target_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Target target0 = new Target();
      MockDate mockDate0 = new MockDate(406, 406, 406);
      MockDate mockDate1 = new MockDate(406, 406, 406, 0, (-929), 0);
      int int0 = target0.__target__(mockDate1, mockDate0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Target target0 = new Target();
      MockDate mockDate0 = new MockDate();
      MockDate mockDate1 = new MockDate(106, 106, 0, 0, 1692);
      int int0 = target0.__target__(mockDate0, mockDate1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Target target0 = new Target();
      MockDate mockDate0 = new MockDate();
      Instant instant0 = MockInstant.ofEpochMilli(0L);
      Date date0 = Date.from(instant0);
      mockDate0.setTime((-311L));
      int int0 = target0.__target__(mockDate0, date0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Target target0 = new Target();
      // Undeclared exception!
      try { 
        target0.__target__((Date) null, (Date) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Calendar", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Target target0 = new Target();
      MockDate mockDate0 = new MockDate(13, 13, 13, 13, 13, 13);
      MockDate mockDate1 = new MockDate(13, 13, 13, 13, 13);
      int int0 = target0.__target__(mockDate0, mockDate1);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Target target0 = new Target();
      MockDate mockDate0 = new MockDate((-11), (-11), (-11), (-11), (-11), (-11));
      MockDate mockDate1 = new MockDate((-11), (-11), (-11), (-11), (-11));
      int int0 = target0.__target__(mockDate0, mockDate1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Target target0 = new Target();
      MockDate mockDate0 = new MockDate(2, 2, 2);
      MockDate mockDate1 = new MockDate(2, 2, 2, 2, 2);
      int int0 = target0.__target__(mockDate0, mockDate1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Target target0 = new Target();
      MockDate mockDate0 = new MockDate((-3), (-3), (-3));
      MockDate mockDate1 = new MockDate((-3), (-3), (-3), (-3), (-3));
      int int0 = target0.__target__(mockDate0, mockDate1);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Target target0 = new Target();
      MockDate mockDate0 = new MockDate(2, 2, 2);
      MockDate mockDate1 = new MockDate(2, 2, 0, 2, 0);
      int int0 = target0.__target__(mockDate0, mockDate1);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Target target0 = new Target();
      MockDate mockDate0 = new MockDate((-11), (-11), (-11), (-11), (-11), (-11));
      int int0 = target0.__target__(mockDate0, mockDate0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Target target0 = new Target();
      MockDate mockDate0 = new MockDate();
      MockDate mockDate1 = new MockDate((-1865), 2087, 909, (-1865), (-1865));
      int int0 = target0.__target__(mockDate0, mockDate1);
      assertEquals(2, int0);
  }
}
