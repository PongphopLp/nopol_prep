/*
 * This file was automatically generated by EvoSuite
 * Sun May 01 21:59:47 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Target_ESTest extends Target_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Target target0 = new Target();
      String string0 = target0.__target__("ZC>pnzU_vn\"K", true);
      assertEquals("ZC&gt;pnzU_vn&quot;K", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Target target0 = new Target();
      String string0 = target0.__target__("`f3gUF2709Q{'x5Jl^_", false);
      assertEquals("`f3gUF2709Q{'x5Jl^_", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Target target0 = new Target();
      String string0 = target0.__target__("=N-M'$x*F<UC*!4;9", true);
      assertEquals("=N-M&apos;$x*F&lt;UC*!4;9", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Target target0 = new Target();
      String string0 = target0.__target__("rhC)Gy&amp;dT}x2u0", true);
      assertEquals("rhC)Gy&amp;amp;dT}x2u0", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Target target0 = new Target();
      String string0 = target0.__target__("", false);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Target target0 = new Target();
      String string0 = target0.__target__((String) null, false);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Target target0 = new Target();
      String string0 = target0.__target__("y>$k8q9,ZD%_0o\",", false);
      assertNotNull(string0);
      assertEquals("y&gt;$k8q9,ZD%_0o\",", string0);
  }
}
