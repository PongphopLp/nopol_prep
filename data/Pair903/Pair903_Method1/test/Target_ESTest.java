/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 28 14:46:33 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Target_ESTest extends Target_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Target target0 = new Target();
      String string0 = target0.__target__("2T28>y{NS*Hii", "3~o\"j487");
      assertEquals(" 2T28>y{NS*Hii = '3~o\\\"j487'", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Target target0 = new Target();
      String string0 = target0.__target__("", "2+=BaV,,3*[NOh");
      assertEquals(" LIKE '2+=BaV,,3%[NOh'", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Target target0 = new Target();
      // Undeclared exception!
      try { 
        target0.__target__((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Target", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Target target0 = new Target();
      String string0 = target0.__target__("IV%$(=8sZl<<", "kw|cmGwlxo8m%l0hgZB");
      assertEquals(" IV%$(=8sZl<< = 'kw|cmGwlxo8m\\%l0hgZB'", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Target target0 = new Target();
      String string0 = target0.__target__("", "c,Os=_dXo^CBAU-");
      assertEquals("  = 'c,Os=\\_dXo^CBAU-'", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Target target0 = new Target();
      String string0 = target0.__target__("Z9.K-?{8n]!vR}r~R~", "Z9.K-?{8n]!vR}r~R~");
      assertEquals("Z9.K-?{8n]!vR}r~R~ LIKE 'Z9.K-_{8n]!vR}r~R~'", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Target target0 = new Target();
      String string0 = target0.__target__("'", "'");
      assertEquals(" ' = '\\''", string0);
  }
}
