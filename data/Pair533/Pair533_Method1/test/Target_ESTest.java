/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 27 11:40:32 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Target_ESTest extends Target_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__(8.0);
      assertEquals('P', char0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__(16.0);
      assertEquals('Q', char0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__(24.0);
      assertEquals('R', char0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__(33.68);
      assertEquals('S', char0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__(43.97224585242);
      assertEquals('T', char0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__(48.0);
      assertEquals('U', char0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__(63.90397617203406);
      assertEquals('V', char0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__(64.0);
      assertEquals('W', char0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__(84.0);
      assertEquals('X', char0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__((-80.0));
      assertEquals('C', char0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__((-72.0));
      assertEquals('D', char0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__((-64.0));
      assertEquals('E', char0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__((-56.0));
      assertEquals('F', char0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__((-48.0));
      assertEquals('G', char0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__((-40.0));
      assertEquals('H', char0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__((-32.0));
      assertEquals('J', char0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__((-16.0597));
      assertEquals('K', char0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__((-16.0));
      assertEquals('L', char0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__((-2423.425));
      assertEquals('Z', char0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__((-1.0));
      assertEquals('M', char0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__(14.3);
      assertEquals('P', char0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__(16.5017114947);
      assertEquals('Q', char0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__(25.095882);
      assertEquals('R', char0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__(32.0);
      assertEquals('S', char0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__(40.0);
      assertEquals('T', char0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__(52.262706);
      assertEquals('U', char0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__(56.0);
      assertEquals('V', char0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__(64.27548869541806);
      assertEquals('W', char0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__(72.0);
      assertEquals('X', char0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__(0.0);
      assertEquals('N', char0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__(328.6);
      assertEquals('Z', char0);
  }
}
