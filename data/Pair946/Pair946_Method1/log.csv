01, Math, 5, "(long)y & 0xffffffffL", "(long)y | 0xffffffffL"
02, Math, 9, "((long)x[j] & 0xffffffffL) * yl", "((long)x[j] & 0xffffffffL) / yl"
03, Math, 9, "(long)x[j] & 0xffffffffL", "(long)x[j] | 0xffffffffL"
04, Math, 11, "prod >> 32", "prod << 32"
05, Math, 13, "((prod_low ^ 0x80000000) < (carry ^ 0x80000000) ? 1 : 0) + prod_high", "((prod_low ^ 0x80000000) < (carry ^ 0x80000000) ? 1 : 0) - prod_high"
06, Math, 13, "prod_low ^ 0x80000000", "prod_low & 0x80000000"
07, Math, 13, "carry ^ 0x80000000", "carry & 0x80000000"
08, Math, 14, "offset + j", "offset - j"
09, Math, 15, "x_j - prod_low", "x_j + prod_low"
10, Math, 16, "prod_low ^ 0x80000000", "prod_low & 0x80000000"
11, Math, 16, "x_j ^ 0x80000000", "x_j & 0x80000000"
12, Math, 17, "offset + j", "offset - j"
13, ConditionalsBoundary, 13, "(prod_low ^ 0x80000000) < (carry ^ 0x80000000)", "(prod_low ^ 0x80000000) <= (carry ^ 0x80000000)"
14, ConditionalsBoundary, 16, "(prod_low ^ 0x80000000) > (x_j ^ 0x80000000)", "(prod_low ^ 0x80000000) >= (x_j ^ 0x80000000)"
15, ConditionalsBoundary, 19, "++j < len", "++j <= len"
16, NegateConditionals, 13, "(prod_low ^ 0x80000000) < (carry ^ 0x80000000)", "(prod_low ^ 0x80000000) >= (carry ^ 0x80000000)"
17, NegateConditionals, 16, "(prod_low ^ 0x80000000) > (x_j ^ 0x80000000)", "(prod_low ^ 0x80000000) <= (x_j ^ 0x80000000)"
18, NegateConditionals, 19, "++j < len", "++j >= len"
19, Increments, 16, "carry++", "carry--"
20, Increments, 19, "++j", "--j"
