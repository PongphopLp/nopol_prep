/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 30 04:08:37 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Target_ESTest extends Target_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Target target0 = new Target();
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        target0.__target__((Class) null, class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Target", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Class<Character> class0 = Character.TYPE;
      Target target0 = new Target();
      // Undeclared exception!
      try { 
        target0.__target__(class0, class0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Class cannot be cast to class java.lang.String (java.lang.Class and java.lang.String are in module java.base of loader 'bootstrap')
         //
         verifyException("Target", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Target target0 = new Target();
      Class<Character> class0 = Character.class;
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        target0.__target__(class0, object0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Object cannot be cast to class java.lang.String (java.lang.Object and java.lang.String are in module java.base of loader 'bootstrap')
         //
         verifyException("Target", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class<Character> class0 = Character.TYPE;
      Target target0 = new Target();
      Object object0 = target0.__target__(class0, (Object) null);
      assertNotNull(object0);
      assertEquals('\u0000', object0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Target target0 = new Target();
      Class<Object> class0 = Object.class;
      Object object0 = target0.__target__(class0, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Target target0 = new Target();
      Class<Object> class0 = Object.class;
      Class class1 = (Class)target0.__target__(class0, class0);
      assertFalse(class1.isSynthetic());
  }
}
