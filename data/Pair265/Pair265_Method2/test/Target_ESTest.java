/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 26 06:19:45 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Target_ESTest extends Target_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__((byte) (-34));
      assertEquals('0', char0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__((byte)15);
      assertEquals('F', char0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__((byte)14);
      assertEquals('E', char0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__((byte)13);
      assertEquals('D', char0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__((byte)12);
      assertEquals('C', char0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__((byte)11);
      assertEquals('B', char0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__((byte)10);
      assertEquals('A', char0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__((byte)9);
      assertEquals('9', char0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__((byte)8);
      assertEquals('8', char0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__((byte)7);
      assertEquals('7', char0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__((byte)6);
      assertEquals('6', char0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__((byte)5);
      assertEquals('5', char0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__((byte)4);
      assertEquals('4', char0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__((byte)3);
      assertEquals('3', char0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__((byte)1);
      assertEquals('1', char0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__((byte)2);
      assertEquals('2', char0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Target target0 = new Target();
      char char0 = target0.__target__((byte)0);
      assertEquals('0', char0);
  }
}
