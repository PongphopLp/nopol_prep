01, Math, 6, "bytes.length - 3", "bytes.length + 3"
02, Math, 7, "((int)bytes[offset] & 0xFF) * 0x1000000 + ((int)bytes[offset + 1] & 0xFF) * 0x10000 + ((int)bytes[offset + 2] & 0xFF) * 0x100 + ((int)bytes[offset + 3] & 0xFF)", "((int)bytes[offset] & 0xFF) * 0x1000000 + ((int)bytes[offset + 1] & 0xFF) * 0x10000 + ((int)bytes[offset + 2] & 0xFF) * 0x100 - ((int)bytes[offset + 3] & 0xFF)"
03, Math, 7, "((int)bytes[offset] & 0xFF) * 0x1000000 + ((int)bytes[offset + 1] & 0xFF) * 0x10000 + ((int)bytes[offset + 2] & 0xFF) * 0x100", "((int)bytes[offset] & 0xFF) * 0x1000000 + ((int)bytes[offset + 1] & 0xFF) * 0x10000 - ((int)bytes[offset + 2] & 0xFF) * 0x100"
04, Math, 7, "((int)bytes[offset] & 0xFF) * 0x1000000 + ((int)bytes[offset + 1] & 0xFF) * 0x10000", "((int)bytes[offset] & 0xFF) * 0x1000000 - ((int)bytes[offset + 1] & 0xFF) * 0x10000"
05, Math, 7, "((int)bytes[offset] & 0xFF) * 0x1000000", "((int)bytes[offset] & 0xFF) / 0x1000000"
06, Math, 7, "(int)bytes[offset] & 0xFF", "(int)bytes[offset] | 0xFF"
07, Math, 7, "((int)bytes[offset + 1] & 0xFF) * 0x10000", "((int)bytes[offset + 1] & 0xFF) / 0x10000"
08, Math, 7, "(int)bytes[offset + 1] & 0xFF", "(int)bytes[offset + 1] | 0xFF"
09, Math, 7, "offset + 1", "offset - 1"
10, Math, 7, "((int)bytes[offset + 2] & 0xFF) * 0x100", "((int)bytes[offset + 2] & 0xFF) / 0x100"
11, Math, 7, "(int)bytes[offset + 2] & 0xFF", "(int)bytes[offset + 2] | 0xFF"
12, Math, 7, "offset + 2", "offset - 2"
13, Math, 7, "(int)bytes[offset + 3] & 0xFF", "(int)bytes[offset + 3] | 0xFF"
14, Math, 7, "offset + 3", "offset - 3"
15, ConditionalsBoundary, 6, "offset < bytes.length - 3", "offset <= bytes.length - 3"
16, NegateConditionals, 6, "bytes != null", "bytes == null"
17, NegateConditionals, 6, "offset < bytes.length - 3", "offset >= bytes.length - 3"
