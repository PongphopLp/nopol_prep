/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 29 17:54:49 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.CharBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Target_ESTest extends Target_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Target target0 = new Target();
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      char[] charArray1 = new char[5];
      charArray1[0] = 'e';
      CharBuffer charBuffer1 = CharBuffer.wrap(charArray1);
      boolean boolean0 = target0.__target__(charBuffer1, charBuffer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Target target0 = new Target();
      CharBuffer charBuffer0 = CharBuffer.allocate(2012);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 2012, 2012);
      boolean boolean0 = target0.__target__(charBuffer0, charBuffer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Target target0 = new Target();
      char[] charArray0 = new char[5];
      charArray0[0] = '#';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      char[] charArray1 = new char[5];
      CharBuffer charBuffer1 = CharBuffer.wrap(charArray1);
      boolean boolean0 = target0.__target__(charBuffer1, charBuffer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Target target0 = new Target();
      CharBuffer charBuffer0 = CharBuffer.allocate(2012);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 2012, 2012);
      boolean boolean0 = target0.__target__(charBuffer1, charBuffer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Target target0 = new Target();
      CharBuffer charBuffer0 = CharBuffer.allocate(2012);
      boolean boolean0 = target0.__target__(charBuffer0, (CharSequence) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Target target0 = new Target();
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      boolean boolean0 = target0.__target__((CharSequence) null, charBuffer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Target target0 = new Target();
      boolean boolean0 = target0.__target__((CharSequence) null, (CharSequence) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Target target0 = new Target();
      CharBuffer charBuffer0 = CharBuffer.allocate(3651);
      target0.__target__(charBuffer0, charBuffer0);
      target0.__target__(charBuffer0, charBuffer0);
      // Undeclared exception!
      target0.__target__(charBuffer0, charBuffer0);
  }
}
