/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 26 11:06:37 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.Map;
import java.util.NavigableMap;
import java.util.TreeMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Target_ESTest extends Target_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Target target0 = new Target();
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      Integer integer0 = new Integer((-2568));
      hashMap0.put(integer0, integer0);
      Map map0 = target0.__target__(hashMap0);
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Target target0 = new Target();
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      HashMap<Object, Object> hashMap1 = new HashMap<Object, Object>();
      TreeMap<Integer, Object> treeMap0 = new TreeMap<Integer, Object>();
      hashMap1.put(hashMap0, treeMap0);
      hashMap0.putAll(hashMap1);
      // Undeclared exception!
      try { 
        target0.__target__(hashMap0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Target target0 = new Target();
      TreeMap<Integer, Integer> treeMap0 = new TreeMap<Integer, Integer>();
      NavigableMap<Integer, Integer> navigableMap0 = treeMap0.descendingMap();
      Map map0 = target0.__target__(navigableMap0);
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Target target0 = new Target();
      TreeMap<Object, Integer> treeMap0 = new TreeMap<Object, Integer>();
      Map map0 = target0.__target__(treeMap0);
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Target target0 = new Target();
      HashMap<Integer, Object> hashMap0 = new HashMap<Integer, Object>();
      Map map0 = target0.__target__(hashMap0);
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Target target0 = new Target();
      // Undeclared exception!
      try { 
        target0.__target__((Map) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashMap", e);
      }
  }
}
