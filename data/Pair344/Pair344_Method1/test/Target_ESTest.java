/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 26 12:19:03 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import java.time.Duration;
import java.time.Instant;
import java.time.temporal.ChronoUnit;
import java.time.temporal.TemporalAmount;
import java.time.temporal.TemporalUnit;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Target_ESTest extends Target_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Target target0 = new Target();
      MockDate mockDate0 = new MockDate(5, 5, 1);
      MockDate mockDate1 = new MockDate(5, 5, 5, 1, 1);
      boolean boolean0 = target0.__target__(mockDate0, mockDate1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Target target0 = new Target();
      MockDate mockDate0 = new MockDate(57, 57, 2969, 1898, 57);
      MockDate mockDate1 = new MockDate(1898);
      boolean boolean0 = target0.__target__(mockDate0, mockDate1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      Target target0 = new Target();
      MockDate mockDate1 = new MockDate(5, 5, 1);
      boolean boolean0 = target0.__target__(mockDate0, mockDate1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockDate mockDate0 = new MockDate(9L);
      Target target0 = new Target();
      Instant instant0 = MockInstant.ofEpochSecond((-1614L));
      ChronoUnit chronoUnit0 = ChronoUnit.HOURS;
      Instant instant1 = MockInstant.minus(instant0, (-42L), (TemporalUnit) chronoUnit0);
      Date date0 = Date.from(instant1);
      boolean boolean0 = target0.__target__(date0, mockDate0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MockDate mockDate0 = new MockDate(1978L);
      Target target0 = new Target();
      Instant instant0 = MockInstant.ofEpochSecond(1978L, 1264L);
      ChronoUnit chronoUnit0 = ChronoUnit.HALF_DAYS;
      Duration duration0 = Duration.of((-107L), chronoUnit0);
      Instant instant1 = MockInstant.minus(instant0, (TemporalAmount) duration0);
      Date date0 = Date.from(instant1);
      boolean boolean0 = target0.__target__(mockDate0, date0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      Target target0 = new Target();
      MockDate mockDate1 = new MockDate(5, 5, 1);
      boolean boolean0 = target0.__target__(mockDate1, mockDate0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MockDate mockDate0 = new MockDate(9L);
      MockDate mockDate1 = new MockDate(2039L);
      Target target0 = new Target();
      boolean boolean0 = target0.__target__(mockDate1, mockDate0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Target target0 = new Target();
      MockDate mockDate0 = new MockDate();
      boolean boolean0 = target0.__target__(mockDate0, (Date) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      MockDate mockDate0 = new MockDate(9L);
      Target target0 = new Target();
      boolean boolean0 = target0.__target__(mockDate0, mockDate0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Target target0 = new Target();
      boolean boolean0 = target0.__target__((Date) null, (Date) null);
      assertFalse(boolean0);
  }
}
